{"version":3,"sources":["App.js","index.js"],"names":["App","useState","title","setTitle","timeLeft","setTimeLeft","isRunning","setIsRunning","intervalRef","useRef","resetTimeer","clearInterval","current","minutes","Math","floor","toString","padStart","seconds","head","document","getElementsByTagName","console","log","innerHTML","updateHead","className","onClick","setInterval","ReactDOM","render","StrictMode","getElementById"],"mappings":"4JAGe,SAASA,IAAO,IAAD,EACFC,mBAAS,8BADP,mBACrBC,EADqB,KACdC,EADc,OAEIF,mBAAS,MAFb,mBAErBG,EAFqB,KAEXC,EAFW,OAGMJ,oBAAS,GAHf,mBAGrBK,EAHqB,KAGVC,EAHU,KAKtBC,EAAcC,iBAAO,MAuBrBC,EAAc,WAClBC,cAAcH,EAAYI,SAC1BP,GAAY,SAAAD,GAAQ,OAAI,QACxBD,GAAS,SAAAD,GAAK,MAAI,6BAClBM,EAAYI,QAAU,KACtBL,GAAa,IAUTM,EAAUC,KAAKC,MAAMX,EAAW,IAAIY,WAAWC,SAAS,EAAG,KAC3DC,GAAWd,EAAqB,GAAVS,GAAcG,WAAWC,SAAS,EAAG,KAIjE,OAZmB,SAACJ,EAASK,GAC3B,IAAMC,EAAOC,SAASC,qBAAqB,SAC3CC,QAAQC,IAAIJ,GACZA,EAAK,GAAGK,UAAR,mBAAgCX,EAAhC,cAA6CK,GAC7CI,QAAQC,IAAIJ,EAAK,GAAGK,WAKtBC,CAAWZ,EAASK,GAIlB,yBAAKQ,UAAU,OACb,4BAAKxB,GAEL,yBAAKwB,UAAU,SACb,8BACGb,GAEH,mCACA,8BAAOK,IAGT,yBAAKQ,UAAU,YACXpB,GAAa,4BAAQqB,QAtDV,WACW,OAAxBnB,EAAYI,UAChBL,GAAa,GACbJ,GAAS,SAAAD,GAAK,MAAI,yBAClBM,EAAYI,QAAUgB,aAAY,WAChCvB,GAAY,SAAAD,GACV,OAAIA,GAAY,EAAUA,EAAW,GACrCM,IACO,QAER,QA4CgB,SACdJ,GAAa,4BAAQqB,QA3CV,WACY,OAAxBnB,EAAYI,UAChBL,GAAa,GACbI,cAAcH,EAAYI,SAC1BT,GAAS,SAAAD,GAAK,MAAI,gBAClBM,EAAYI,QAAU,QAsCJ,QACd,4BAAQe,QAASjB,GAAjB,WC9DRmB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFX,SAASY,eAAe,U","file":"static/js/main.10a746f3.chunk.js","sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport './App.css';\r\n\r\nexport default function App() {\r\n  const [title, setTitle] = useState(\"Let the Countdown begin!!!\");\r\n  const [timeLeft, setTimeLeft] = useState(25 * 60)\r\n  const [isRunning, setIsRunning] = useState(false)\r\n\r\n  const intervalRef = useRef(null)\r\n\r\n  const startTimer = () => {\r\n    if (intervalRef.current !== null) return\r\n    setIsRunning(true)\r\n    setTitle(title => \"You are doing great\")\r\n    intervalRef.current = setInterval(() => {\r\n      setTimeLeft(timeLeft => {\r\n        if (timeLeft >= 1) return timeLeft - 1;\r\n        resetTimeer()\r\n        return 0;\r\n      })\r\n    }, 1000)\r\n  }\r\n  const stopTimer = () => {\r\n    if (intervalRef.current === null) return\r\n    setIsRunning(false)\r\n    clearInterval(intervalRef.current)\r\n    setTitle(title => \"Keep it up\")\r\n    intervalRef.current = null\r\n\r\n  }\r\n\r\n  const resetTimeer = () => {\r\n    clearInterval(intervalRef.current)\r\n    setTimeLeft(timeLeft => 25 * 60)\r\n    setTitle(title => \"Wanna go another round?\")\r\n    intervalRef.current = null\r\n    setIsRunning(false)\r\n  }\r\n\r\n  const updateHead = (minutes, seconds) => {\r\n    const head = document.getElementsByTagName(\"title\")\r\n    console.log(head)\r\n    head[0].innerHTML = `Pomodoro ${minutes} : ${seconds}`\r\n    console.log(head[0].innerHTML)\r\n  }\r\n\r\n  const minutes = Math.floor(timeLeft / 60).toString().padStart(2, \"0\");\r\n  const seconds = (timeLeft - minutes * 60).toString().padStart(2, \"0\");\r\n  updateHead(minutes, seconds)\r\n\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <h2>{title}</h2>\r\n\r\n      <div className=\"timer\">\r\n        <span>\r\n          {minutes}\r\n        </span>\r\n        <span>:</span>\r\n        <span>{seconds}</span>\r\n      </div>\r\n\r\n      <div className=\"buttons\">\r\n        {!isRunning && <button onClick={startTimer}>Start</button>}\r\n        {isRunning && <button onClick={stopTimer}>Stop</button>}\r\n        <button onClick={resetTimeer}>Reset</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}